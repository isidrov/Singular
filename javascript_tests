const xapi = require('xapi');


const LANGUAGE_DEFAULT = 'English';
const LANGUAGE_REVERT_TO_DEFAULT_IN_STANDBY = 1;

function initUILanguage(language) {
  var languageWidgetId = language.toLowerCase();
  if (languageWidgetId == 'frenchcanadian') {
    languageWidgetId = 'frenchcdn';
  }
  console.log('Setting lang id to ' + languageWidgetId);
  xapi.command('UserInterface Extensions Widget SetValue', {'WidgetId': 'lang', 'Value': languageWidgetId}).catch((error) => { console.error(error); }); // This expects an in-room control group-widget named 'lang' and the selected language in the list named lowercase name of language

}

function setLanguage(language) {
  let newlanguage = null;
  console.log('setlang:' + language)
  switch(language) {
      case 'lang_english':
      newlanguage = 'English';
      break;
      case 'lang_frenchcdn':
      newlanguage = 'FrenchCanadian';
      break;
    default:
      newlanguage = LANGUAGE_DEFAULT;
  }

  xapi.config.set('UserInterface Language', newlanguage).catch((error) => { console.error(error); });
  xapi.command('UserInterface Extensions Panel Close').catch((error) => { console.error(error); }); //This command was added to CE 9.5. This line will fail if running on older firmware

}

function onGui(event) {
  if (event.Type === 'clicked'  && event.WidgetId.startsWith('lang')){
    setLanguage(event.WidgetId.toLowerCase());
  }
  else if (event.Type === 'pressed' && event.WidgetId === 'lang'){
    setLanguage('lang_' + event.Value.toLowerCase());
  }
}

if(LANGUAGE_REVERT_TO_DEFAULT_IN_STANDBY){
    xapi.status.on('Standby State', state => {
      console.log('going to ', state);
      if (state === 'Standby') setLanguage(LANGUAGE_DEFAULT);
    });
}

xapi.event.on('UserInterface Extensions Widget Action', onGui);

xapi.config.on('UserInterface Language', (currentlanguage) => {
  initUILanguage(currentlanguage);
});

xapi.config.get('UserInterface Language').then((currentlanguage) => {
  initUILanguage(currentlanguage);
});